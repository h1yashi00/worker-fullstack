{"ast":null,"code":"// src/client/utils.ts\nimport { getPathFromURL } from \"../utils/url.js\";\nvar mergePath = (base, path) => {\n  base = base.replace(/\\/+$/, \"\");\n  base = base + \"/\";\n  path = path.replace(/^\\/+/, \"\");\n  return base + path;\n};\nvar replaceUrlParam = (urlString, params) => {\n  for (const [k, v] of Object.entries(params)) {\n    const reg = new RegExp(\"/:\" + k);\n    urlString = urlString.replace(reg, `/${v}`);\n  }\n  return urlString;\n};\nvar removeIndexString = urlSting => {\n  const path = getPathFromURL(urlSting);\n  if (path === \"/index\") {\n    return urlSting.replace(/index$/, \"\");\n  }\n  return urlSting;\n};\nfunction isObject(item) {\n  return typeof item === \"object\" && item !== null && !Array.isArray(item);\n}\nfunction deepMerge(target, source) {\n  if (!isObject(target) && !isObject(source)) {\n    return source;\n  }\n  const merged = {\n    ...target\n  };\n  for (const key in source) {\n    const value = source[key];\n    if (isObject(merged[key]) && isObject(value)) {\n      merged[key] = deepMerge(merged[key], value);\n    } else {\n      merged[key] = value;\n    }\n  }\n  return merged;\n}\nexport { deepMerge, mergePath, removeIndexString, replaceUrlParam };","map":{"version":3,"names":["getPathFromURL","mergePath","base","path","replace","replaceUrlParam","urlString","params","k","v","Object","entries","reg","RegExp","removeIndexString","urlSting","isObject","item","Array","isArray","deepMerge","target","source","merged","key","value"],"sources":["/Users/hankake/web/react-workers/client/node_modules/hono/dist/client/utils.js"],"sourcesContent":["// src/client/utils.ts\nimport { getPathFromURL } from \"../utils/url.js\";\nvar mergePath = (base, path) => {\n  base = base.replace(/\\/+$/, \"\");\n  base = base + \"/\";\n  path = path.replace(/^\\/+/, \"\");\n  return base + path;\n};\nvar replaceUrlParam = (urlString, params) => {\n  for (const [k, v] of Object.entries(params)) {\n    const reg = new RegExp(\"/:\" + k);\n    urlString = urlString.replace(reg, `/${v}`);\n  }\n  return urlString;\n};\nvar removeIndexString = (urlSting) => {\n  const path = getPathFromURL(urlSting);\n  if (path === \"/index\") {\n    return urlSting.replace(/index$/, \"\");\n  }\n  return urlSting;\n};\nfunction isObject(item) {\n  return typeof item === \"object\" && item !== null && !Array.isArray(item);\n}\nfunction deepMerge(target, source) {\n  if (!isObject(target) && !isObject(source)) {\n    return source;\n  }\n  const merged = { ...target };\n  for (const key in source) {\n    const value = source[key];\n    if (isObject(merged[key]) && isObject(value)) {\n      merged[key] = deepMerge(merged[key], value);\n    } else {\n      merged[key] = value;\n    }\n  }\n  return merged;\n}\nexport {\n  deepMerge,\n  mergePath,\n  removeIndexString,\n  replaceUrlParam\n};\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,iBAAiB;AAChD,IAAIC,SAAS,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EAC9BD,IAAI,GAAGA,IAAI,CAACE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAC/BF,IAAI,GAAGA,IAAI,GAAG,GAAG;EACjBC,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAC/B,OAAOF,IAAI,GAAGC,IAAI;AACpB,CAAC;AACD,IAAIE,eAAe,GAAGA,CAACC,SAAS,EAAEC,MAAM,KAAK;EAC3C,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;IAC3C,MAAMK,GAAG,GAAG,IAAIC,MAAM,CAAC,IAAI,GAAGL,CAAC,CAAC;IAChCF,SAAS,GAAGA,SAAS,CAACF,OAAO,CAACQ,GAAG,EAAG,IAAGH,CAAE,EAAC,CAAC;EAC7C;EACA,OAAOH,SAAS;AAClB,CAAC;AACD,IAAIQ,iBAAiB,GAAIC,QAAQ,IAAK;EACpC,MAAMZ,IAAI,GAAGH,cAAc,CAACe,QAAQ,CAAC;EACrC,IAAIZ,IAAI,KAAK,QAAQ,EAAE;IACrB,OAAOY,QAAQ,CAACX,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;EACvC;EACA,OAAOW,QAAQ;AACjB,CAAC;AACD,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,OAAO,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC;AAC1E;AACA,SAASG,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAE;EACjC,IAAI,CAACN,QAAQ,CAACK,MAAM,CAAC,IAAI,CAACL,QAAQ,CAACM,MAAM,CAAC,EAAE;IAC1C,OAAOA,MAAM;EACf;EACA,MAAMC,MAAM,GAAG;IAAE,GAAGF;EAAO,CAAC;EAC5B,KAAK,MAAMG,GAAG,IAAIF,MAAM,EAAE;IACxB,MAAMG,KAAK,GAAGH,MAAM,CAACE,GAAG,CAAC;IACzB,IAAIR,QAAQ,CAACO,MAAM,CAACC,GAAG,CAAC,CAAC,IAAIR,QAAQ,CAACS,KAAK,CAAC,EAAE;MAC5CF,MAAM,CAACC,GAAG,CAAC,GAAGJ,SAAS,CAACG,MAAM,CAACC,GAAG,CAAC,EAAEC,KAAK,CAAC;IAC7C,CAAC,MAAM;MACLF,MAAM,CAACC,GAAG,CAAC,GAAGC,KAAK;IACrB;EACF;EACA,OAAOF,MAAM;AACf;AACA,SACEH,SAAS,EACTnB,SAAS,EACTa,iBAAiB,EACjBT,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}