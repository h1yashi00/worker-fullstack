{"ast":null,"code":"// src/client/client.ts\nimport { replaceUrlParam, mergePath, removeIndexString, deepMerge } from \"./utils.js\";\nvar createProxy = (callback, path) => {\n  const proxy = new Proxy(() => {}, {\n    get(_obj, key) {\n      if (typeof key !== \"string\") return void 0;\n      return createProxy(callback, [...path, key]);\n    },\n    apply(_1, _2, args) {\n      return callback({\n        path,\n        args\n      });\n    }\n  });\n  return proxy;\n};\nvar ClientRequestImpl = class {\n  constructor(url, method) {\n    this.queryParams = void 0;\n    this.pathParams = {};\n    this.cType = void 0;\n    this.fetch = (args, opt) => {\n      if (args) {\n        if (args.query) {\n          for (const [k, v] of Object.entries(args.query)) {\n            this.queryParams || (this.queryParams = new URLSearchParams());\n            this.queryParams.set(k, v);\n          }\n        }\n        if (args.queries) {\n          for (const [k, v] of Object.entries(args.queries)) {\n            for (const v2 of v) {\n              this.queryParams || (this.queryParams = new URLSearchParams());\n              this.queryParams.append(k, v2);\n            }\n          }\n        }\n        if (args.form) {\n          const form = new FormData();\n          for (const [k, v] of Object.entries(args.form)) {\n            form.append(k, v);\n          }\n          this.rBody = form;\n        }\n        if (args.json) {\n          this.rBody = JSON.stringify(args.json);\n          this.cType = \"application/json\";\n        }\n        if (args.param) {\n          this.pathParams = args.param;\n        }\n      }\n      let methodUpperCase = this.method.toUpperCase();\n      let setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n      const headerValues = opt?.headers ? opt.headers : {};\n      if (this.cType) headerValues[\"Content-Type\"] = this.cType;\n      const headers = new Headers(headerValues ?? void 0);\n      let url = this.url;\n      url = removeIndexString(url);\n      url = replaceUrlParam(url, this.pathParams);\n      if (this.queryParams) {\n        url = url + \"?\" + this.queryParams.toString();\n      }\n      methodUpperCase = this.method.toUpperCase();\n      setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n      return (opt?.fetch || fetch)(url, {\n        body: setBody ? this.rBody : void 0,\n        method: methodUpperCase,\n        headers\n      });\n    };\n    this.url = url;\n    this.method = method;\n  }\n};\nvar hc = (baseUrl, options) => createProxy(async opts => {\n  const parts = [...opts.path];\n  let method = \"\";\n  if (/^\\$/.test(parts[parts.length - 1])) {\n    const last = parts.pop();\n    if (last) {\n      method = last.replace(/^\\$/, \"\");\n    }\n  }\n  const path = parts.join(\"/\");\n  const url = mergePath(baseUrl, path);\n  const req = new ClientRequestImpl(url, method);\n  if (method) {\n    options ?? (options = {});\n    const args = deepMerge(options, {\n      ...(opts.args[1] ?? {})\n    });\n    return req.fetch(opts.args[0], args);\n  }\n  return req;\n}, []);\nexport { hc };","map":{"version":3,"names":["replaceUrlParam","mergePath","removeIndexString","deepMerge","createProxy","callback","path","proxy","Proxy","get","_obj","key","apply","_1","_2","args","ClientRequestImpl","constructor","url","method","queryParams","pathParams","cType","fetch","opt","query","k","v","Object","entries","URLSearchParams","set","queries","v2","append","form","FormData","rBody","json","JSON","stringify","param","methodUpperCase","toUpperCase","setBody","headerValues","headers","Headers","toString","body","hc","baseUrl","options","opts","parts","test","length","last","pop","replace","join","req"],"sources":["/Users/hankake/web/react-workers/client/node_modules/hono/dist/client/client.js"],"sourcesContent":["// src/client/client.ts\nimport { replaceUrlParam, mergePath, removeIndexString, deepMerge } from \"./utils.js\";\nvar createProxy = (callback, path) => {\n  const proxy = new Proxy(() => {\n  }, {\n    get(_obj, key) {\n      if (typeof key !== \"string\")\n        return void 0;\n      return createProxy(callback, [...path, key]);\n    },\n    apply(_1, _2, args) {\n      return callback({\n        path,\n        args\n      });\n    }\n  });\n  return proxy;\n};\nvar ClientRequestImpl = class {\n  constructor(url, method) {\n    this.queryParams = void 0;\n    this.pathParams = {};\n    this.cType = void 0;\n    this.fetch = (args, opt) => {\n      if (args) {\n        if (args.query) {\n          for (const [k, v] of Object.entries(args.query)) {\n            this.queryParams || (this.queryParams = new URLSearchParams());\n            this.queryParams.set(k, v);\n          }\n        }\n        if (args.queries) {\n          for (const [k, v] of Object.entries(args.queries)) {\n            for (const v2 of v) {\n              this.queryParams || (this.queryParams = new URLSearchParams());\n              this.queryParams.append(k, v2);\n            }\n          }\n        }\n        if (args.form) {\n          const form = new FormData();\n          for (const [k, v] of Object.entries(args.form)) {\n            form.append(k, v);\n          }\n          this.rBody = form;\n        }\n        if (args.json) {\n          this.rBody = JSON.stringify(args.json);\n          this.cType = \"application/json\";\n        }\n        if (args.param) {\n          this.pathParams = args.param;\n        }\n      }\n      let methodUpperCase = this.method.toUpperCase();\n      let setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n      const headerValues = opt?.headers ? opt.headers : {};\n      if (this.cType)\n        headerValues[\"Content-Type\"] = this.cType;\n      const headers = new Headers(headerValues ?? void 0);\n      let url = this.url;\n      url = removeIndexString(url);\n      url = replaceUrlParam(url, this.pathParams);\n      if (this.queryParams) {\n        url = url + \"?\" + this.queryParams.toString();\n      }\n      methodUpperCase = this.method.toUpperCase();\n      setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n      return (opt?.fetch || fetch)(url, {\n        body: setBody ? this.rBody : void 0,\n        method: methodUpperCase,\n        headers\n      });\n    };\n    this.url = url;\n    this.method = method;\n  }\n};\nvar hc = (baseUrl, options) => createProxy(async (opts) => {\n  const parts = [...opts.path];\n  let method = \"\";\n  if (/^\\$/.test(parts[parts.length - 1])) {\n    const last = parts.pop();\n    if (last) {\n      method = last.replace(/^\\$/, \"\");\n    }\n  }\n  const path = parts.join(\"/\");\n  const url = mergePath(baseUrl, path);\n  const req = new ClientRequestImpl(url, method);\n  if (method) {\n    options ?? (options = {});\n    const args = deepMerge(options, { ...opts.args[1] ?? {} });\n    return req.fetch(opts.args[0], args);\n  }\n  return req;\n}, []);\nexport {\n  hc\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}