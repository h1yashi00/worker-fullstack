{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createClass from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _toConsumableArray from \"/Users/hankake/web/react-workers/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n// src/client/client.ts\nimport { replaceUrlParam, mergePath, removeIndexString, deepMerge } from \"./utils.js\";\nvar createProxy = function createProxy(callback, path) {\n  var proxy = new Proxy(function () {}, {\n    get: function get(_obj, key) {\n      if (typeof key !== \"string\") return void 0;\n      return createProxy(callback, [].concat(_toConsumableArray(path), [key]));\n    },\n    apply: function apply(_1, _2, args) {\n      return callback({\n        path: path,\n        args: args\n      });\n    }\n  });\n  return proxy;\n};\nvar ClientRequestImpl = /*#__PURE__*/_createClass(function ClientRequestImpl(url, method) {\n  var _this = this;\n  _classCallCheck(this, ClientRequestImpl);\n  this.queryParams = void 0;\n  this.pathParams = {};\n  this.cType = void 0;\n  this.fetch = function (args, opt) {\n    if (args) {\n      if (args.query) {\n        for (var _i = 0, _Object$entries = Object.entries(args.query); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            k = _Object$entries$_i[0],\n            v = _Object$entries$_i[1];\n          _this.queryParams || (_this.queryParams = new URLSearchParams());\n          _this.queryParams.set(k, v);\n        }\n      }\n      if (args.queries) {\n        for (var _i2 = 0, _Object$entries2 = Object.entries(args.queries); _i2 < _Object$entries2.length; _i2++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            _k = _Object$entries2$_i[0],\n            _v = _Object$entries2$_i[1];\n          var _iterator = _createForOfIteratorHelper(_v),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var v2 = _step.value;\n              _this.queryParams || (_this.queryParams = new URLSearchParams());\n              _this.queryParams.append(_k, v2);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n      if (args.form) {\n        var form = new FormData();\n        for (var _i3 = 0, _Object$entries3 = Object.entries(args.form); _i3 < _Object$entries3.length; _i3++) {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n            _k2 = _Object$entries3$_i[0],\n            _v2 = _Object$entries3$_i[1];\n          form.append(_k2, _v2);\n        }\n        _this.rBody = form;\n      }\n      if (args.json) {\n        _this.rBody = JSON.stringify(args.json);\n        _this.cType = \"application/json\";\n      }\n      if (args.param) {\n        _this.pathParams = args.param;\n      }\n    }\n    var methodUpperCase = _this.method.toUpperCase();\n    var setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n    var headerValues = opt !== null && opt !== void 0 && opt.headers ? opt.headers : {};\n    if (_this.cType) headerValues[\"Content-Type\"] = _this.cType;\n    var headers = new Headers(headerValues !== null && headerValues !== void 0 ? headerValues : void 0);\n    var url = _this.url;\n    url = removeIndexString(url);\n    url = replaceUrlParam(url, _this.pathParams);\n    if (_this.queryParams) {\n      url = url + \"?\" + _this.queryParams.toString();\n    }\n    methodUpperCase = _this.method.toUpperCase();\n    setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n    return ((opt === null || opt === void 0 ? void 0 : opt.fetch) || fetch)(url, {\n      body: setBody ? _this.rBody : void 0,\n      method: methodUpperCase,\n      headers: headers\n    });\n  };\n  this.url = url;\n  this.method = method;\n});\nvar hc = function hc(baseUrl, options) {\n  return createProxy( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(opts) {\n      var parts, method, last, path, url, req, _options, _opts$args$, args;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            parts = _toConsumableArray(opts.path);\n            method = \"\";\n            if (/^\\$/.test(parts[parts.length - 1])) {\n              last = parts.pop();\n              if (last) {\n                method = last.replace(/^\\$/, \"\");\n              }\n            }\n            path = parts.join(\"/\");\n            url = mergePath(baseUrl, path);\n            req = new ClientRequestImpl(url, method);\n            if (!method) {\n              _context.next = 10;\n              break;\n            }\n            (_options = options) !== null && _options !== void 0 ? _options : options = {};\n            args = deepMerge(options, _objectSpread({}, (_opts$args$ = opts.args[1]) !== null && _opts$args$ !== void 0 ? _opts$args$ : {}));\n            return _context.abrupt(\"return\", req.fetch(opts.args[0], args));\n          case 10:\n            return _context.abrupt(\"return\", req);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n};\nexport { hc };","map":{"version":3,"names":["replaceUrlParam","mergePath","removeIndexString","deepMerge","createProxy","callback","path","proxy","Proxy","get","_obj","key","concat","_toConsumableArray","apply","_1","_2","args","ClientRequestImpl","_createClass","url","method","_this","_classCallCheck","queryParams","pathParams","cType","fetch","opt","query","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","k","v","URLSearchParams","set","queries","_i2","_Object$entries2","_Object$entries2$_i","_iterator","_createForOfIteratorHelper","_step","s","n","done","v2","value","append","err","e","f","form","FormData","_i3","_Object$entries3","_Object$entries3$_i","rBody","json","JSON","stringify","param","methodUpperCase","toUpperCase","setBody","headerValues","headers","Headers","toString","body","hc","baseUrl","options","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","opts","parts","last","req","_options","_opts$args$","wrap","_callee$","_context","prev","next","test","pop","replace","join","_objectSpread","abrupt","stop","_x","arguments"],"sources":["/Users/hankake/web/react-workers/client/node_modules/hono/dist/client/client.js"],"sourcesContent":["// src/client/client.ts\nimport { replaceUrlParam, mergePath, removeIndexString, deepMerge } from \"./utils.js\";\nvar createProxy = (callback, path) => {\n  const proxy = new Proxy(() => {\n  }, {\n    get(_obj, key) {\n      if (typeof key !== \"string\")\n        return void 0;\n      return createProxy(callback, [...path, key]);\n    },\n    apply(_1, _2, args) {\n      return callback({\n        path,\n        args\n      });\n    }\n  });\n  return proxy;\n};\nvar ClientRequestImpl = class {\n  constructor(url, method) {\n    this.queryParams = void 0;\n    this.pathParams = {};\n    this.cType = void 0;\n    this.fetch = (args, opt) => {\n      if (args) {\n        if (args.query) {\n          for (const [k, v] of Object.entries(args.query)) {\n            this.queryParams || (this.queryParams = new URLSearchParams());\n            this.queryParams.set(k, v);\n          }\n        }\n        if (args.queries) {\n          for (const [k, v] of Object.entries(args.queries)) {\n            for (const v2 of v) {\n              this.queryParams || (this.queryParams = new URLSearchParams());\n              this.queryParams.append(k, v2);\n            }\n          }\n        }\n        if (args.form) {\n          const form = new FormData();\n          for (const [k, v] of Object.entries(args.form)) {\n            form.append(k, v);\n          }\n          this.rBody = form;\n        }\n        if (args.json) {\n          this.rBody = JSON.stringify(args.json);\n          this.cType = \"application/json\";\n        }\n        if (args.param) {\n          this.pathParams = args.param;\n        }\n      }\n      let methodUpperCase = this.method.toUpperCase();\n      let setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n      const headerValues = opt?.headers ? opt.headers : {};\n      if (this.cType)\n        headerValues[\"Content-Type\"] = this.cType;\n      const headers = new Headers(headerValues ?? void 0);\n      let url = this.url;\n      url = removeIndexString(url);\n      url = replaceUrlParam(url, this.pathParams);\n      if (this.queryParams) {\n        url = url + \"?\" + this.queryParams.toString();\n      }\n      methodUpperCase = this.method.toUpperCase();\n      setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\n      return (opt?.fetch || fetch)(url, {\n        body: setBody ? this.rBody : void 0,\n        method: methodUpperCase,\n        headers\n      });\n    };\n    this.url = url;\n    this.method = method;\n  }\n};\nvar hc = (baseUrl, options) => createProxy(async (opts) => {\n  const parts = [...opts.path];\n  let method = \"\";\n  if (/^\\$/.test(parts[parts.length - 1])) {\n    const last = parts.pop();\n    if (last) {\n      method = last.replace(/^\\$/, \"\");\n    }\n  }\n  const path = parts.join(\"/\");\n  const url = mergePath(baseUrl, path);\n  const req = new ClientRequestImpl(url, method);\n  if (method) {\n    options ?? (options = {});\n    const args = deepMerge(options, { ...opts.args[1] ?? {} });\n    return req.fetch(opts.args[0], args);\n  }\n  return req;\n}, []);\nexport {\n  hc\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}